{
  "version": 3,
  "sources": ["../../@conform-to/dom/_virtual/_rollupPluginBabelHelpers.mjs", "../../@conform-to/dom/formdata.mjs", "../../@conform-to/dom/util.mjs", "../../@conform-to/dom/submission.mjs", "../../@conform-to/dom/dom.mjs", "../../@conform-to/dom/form.mjs"],
  "sourcesContent": ["function ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nexport { _defineProperty as defineProperty, _objectSpread2 as objectSpread2, _toPrimitive as toPrimitive, _toPropertyKey as toPropertyKey };\n", "/**\n * Construct a form data with the submitter value.\n * It utilizes the submitter argument on the FormData constructor from modern browsers\n * with fallback to append the submitter value in case it is not unsupported.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData#parameters\n */\nfunction getFormData(form, submitter) {\n  var payload = new FormData(form, submitter);\n  if (submitter && submitter.type === 'submit' && submitter.name !== '') {\n    var entries = payload.getAll(submitter.name);\n\n    // This assumes the submitter value to be always unique, which should be fine in most cases\n    if (!entries.includes(submitter.value)) {\n      payload.append(submitter.name, submitter.value);\n    }\n  }\n  return payload;\n}\n\n/**\n * Returns the paths from a name based on the JS syntax convention\n * @example\n * ```js\n * const paths = getPaths('todos[0].content'); // ['todos', 0, 'content']\n * ```\n */\nfunction getPaths(name) {\n  if (!name) {\n    return [];\n  }\n  return name.split(/\\.|(\\[\\d*\\])/).reduce((result, segment) => {\n    if (typeof segment !== 'undefined' && segment !== '' && segment !== '__proto__' && segment !== 'constructor' && segment !== 'prototype') {\n      if (segment.startsWith('[') && segment.endsWith(']')) {\n        var index = segment.slice(1, -1);\n        result.push(Number(index));\n      } else {\n        result.push(segment);\n      }\n    }\n    return result;\n  }, []);\n}\n\n/**\n * Returns a formatted name from the paths based on the JS syntax convention\n * @example\n * ```js\n * const name = formatPaths(['todos', 0, 'content']); // \"todos[0].content\"\n * ```\n */\nfunction formatPaths(paths) {\n  return paths.reduce((name, path) => {\n    if (typeof path === 'number') {\n      return \"\".concat(name, \"[\").concat(Number.isNaN(path) ? '' : path, \"]\");\n    }\n    if (name === '' || path === '') {\n      return [name, path].join('');\n    }\n    return [name, path].join('.');\n  }, '');\n}\n\n/**\n * Format based on a prefix and a path\n */\nfunction formatName(prefix, path) {\n  return typeof path !== 'undefined' ? formatPaths([...getPaths(prefix), path]) : prefix !== null && prefix !== void 0 ? prefix : '';\n}\n\n/**\n * Check if a name match the prefix paths\n */\nfunction isPrefix(name, prefix) {\n  var paths = getPaths(name);\n  var prefixPaths = getPaths(prefix);\n  return paths.length >= prefixPaths.length && prefixPaths.every((path, index) => paths[index] === path);\n}\n\n/**\n * Assign a value to a target object by following the paths\n */\nfunction setValue(target, name, valueFn) {\n  var paths = getPaths(name);\n  var length = paths.length;\n  var lastIndex = length - 1;\n  var index = -1;\n  var pointer = target;\n  while (pointer != null && ++index < length) {\n    var key = paths[index];\n    var nextKey = paths[index + 1];\n    var newValue = index != lastIndex ? Object.prototype.hasOwnProperty.call(pointer, key) && pointer[key] !== null ? pointer[key] : typeof nextKey === 'number' ? [] : {} : valueFn(pointer[key]);\n    pointer[key] = newValue;\n    pointer = pointer[key];\n  }\n}\n\n/**\n * Retrive the value from a target object by following the paths\n */\nfunction getValue(target, name) {\n  var pointer = target;\n  for (var path of getPaths(name)) {\n    if (typeof pointer === 'undefined' || pointer == null) {\n      break;\n    }\n    if (!Object.prototype.hasOwnProperty.call(pointer, path)) {\n      return;\n    }\n    if (isPlainObject(pointer) && typeof path === 'string') {\n      pointer = pointer[path];\n    } else if (Array.isArray(pointer) && typeof path === 'number') {\n      pointer = pointer[path];\n    } else {\n      return;\n    }\n  }\n  return pointer;\n}\n\n/**\n * Check if the value is a plain object\n */\nfunction isPlainObject(obj) {\n  return !!obj && obj.constructor === Object && Object.getPrototypeOf(obj) === Object.prototype;\n}\n\n/**\n * Check if the value is a File\n */\nfunction isFile(obj) {\n  // Skip checking if File is not defined\n  if (typeof File === 'undefined') {\n    return false;\n  }\n  return obj instanceof File;\n}\n\n/**\n * Normalize value by removing empty object or array, empty string and null values\n */\n\nfunction normalize(value) {\n  var acceptFile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (isPlainObject(value)) {\n    var obj = Object.keys(value).sort().reduce((result, key) => {\n      var data = normalize(value[key], acceptFile);\n      if (typeof data !== 'undefined') {\n        result[key] = data;\n      }\n      return result;\n    }, {});\n    if (Object.keys(obj).length === 0) {\n      return;\n    }\n    return obj;\n  }\n  if (Array.isArray(value)) {\n    if (value.length === 0) {\n      return undefined;\n    }\n    return value.map(item => normalize(item, acceptFile));\n  }\n  if (typeof value === 'string' && value === '' || value === null || isFile(value) && (!acceptFile || value.size === 0)) {\n    return;\n  }\n  return value;\n}\n\n/**\n * Flatten a tree into a dictionary\n */\nfunction flatten(data) {\n  var _options$resolve;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var result = {};\n  var resolve = (_options$resolve = options.resolve) !== null && _options$resolve !== void 0 ? _options$resolve : data => data;\n  function process(data, prefix) {\n    var value = normalize(resolve(data));\n    if (typeof value !== 'undefined') {\n      result[prefix] = value;\n    }\n    if (Array.isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        process(data[i], \"\".concat(prefix, \"[\").concat(i, \"]\"));\n      }\n    } else if (isPlainObject(data)) {\n      for (var [key, _value] of Object.entries(data)) {\n        process(_value, prefix ? \"\".concat(prefix, \".\").concat(key) : key);\n      }\n    }\n  }\n  if (data) {\n    var _options$prefix;\n    process(data, (_options$prefix = options.prefix) !== null && _options$prefix !== void 0 ? _options$prefix : '');\n  }\n  return result;\n}\n\nexport { flatten, formatName, formatPaths, getFormData, getPaths, getValue, isFile, isPlainObject, isPrefix, normalize, setValue };\n", "function invariant(expectedCondition, message) {\n  if (!expectedCondition) {\n    throw new Error(message);\n  }\n}\nfunction generateId() {\n  return (Date.now() * Math.random()).toString(36);\n}\nfunction clone(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nexport { clone, generateId, invariant };\n", "import { objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport { formatName, setValue, isPlainObject, getValue, normalize, flatten, isPrefix } from './formdata.mjs';\nimport { invariant } from './util.mjs';\n\n/**\n * The name to be used when submitting a form control\n */\nvar INTENT = '__intent__';\n\n/**\n * The name to be used when submitting a state\n */\nvar STATE = '__state__';\nfunction getSubmissionContext(body) {\n  var intent = body.get(INTENT);\n  var state = body.get(STATE);\n  invariant((typeof intent === 'string' || intent === null) && (typeof state === 'string' || state === null), \"The input name \\\"\".concat(INTENT, \"\\\" and \\\"\").concat(STATE, \"\\\" are reserved by Conform. Please use another name for your input.\"));\n  var context = {\n    payload: {},\n    fields: new Set(),\n    intent: getIntent(intent)\n  };\n  if (state) {\n    context.state = JSON.parse(state);\n  }\n  var _loop = function _loop(next) {\n    if (name === INTENT || name === STATE) {\n      return 1; // continue\n    }\n    context.fields.add(name);\n    setValue(context.payload, name, prev => {\n      if (!prev) {\n        return next;\n      } else if (Array.isArray(prev)) {\n        return prev.concat(next);\n      } else {\n        return [prev, next];\n      }\n    });\n  };\n  for (var [name, next] of body.entries()) {\n    if (_loop(next)) continue;\n  }\n  return context;\n}\nfunction parse(payload, options) {\n  var context = getSubmissionContext(payload);\n  var intent = context.intent;\n  if (intent) {\n    switch (intent.type) {\n      case 'update':\n        {\n          var name = formatName(intent.payload.name, intent.payload.index);\n          var _value = intent.payload.value;\n          if (typeof intent.payload.value !== 'undefined') {\n            if (name) {\n              setValue(context.payload, name, () => _value);\n            } else {\n              context.payload = _value;\n            }\n          }\n          break;\n        }\n      case 'reset':\n        {\n          var _name = formatName(intent.payload.name, intent.payload.index);\n          if (_name) {\n            setValue(context.payload, _name, () => undefined);\n          } else {\n            context.payload = {};\n          }\n          break;\n        }\n      case 'insert':\n      case 'remove':\n      case 'reorder':\n        {\n          setListValue(context.payload, intent);\n          break;\n        }\n    }\n  }\n  var result = options.resolve(context.payload, intent);\n  var mergeResolveResult = resolved => createSubmission(_objectSpread2(_objectSpread2({}, context), {}, {\n    value: resolved.value,\n    error: resolved.error\n  }));\n  if (result instanceof Promise) {\n    return result.then(mergeResolveResult);\n  }\n  return mergeResolveResult(result);\n}\nfunction createSubmission(context) {\n  if (context.intent || !context.value || context.error) {\n    return {\n      status: !context.intent ? 'error' : undefined,\n      payload: context.payload,\n      error: typeof context.error !== 'undefined' ? context.error : {},\n      reply(options) {\n        return replySubmission(context, options);\n      }\n    };\n  }\n  return {\n    status: 'success',\n    payload: context.payload,\n    value: context.value,\n    reply(options) {\n      return replySubmission(context, options);\n    }\n  };\n}\nfunction replySubmission(context) {\n  var _context$intent, _context$intent$paylo, _options$formErrors, _ref;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if ('resetForm' in options && options.resetForm || ((_context$intent = context.intent) === null || _context$intent === void 0 ? void 0 : _context$intent.type) === 'reset' && ((_context$intent$paylo = context.intent.payload.name) !== null && _context$intent$paylo !== void 0 ? _context$intent$paylo : '') === '') {\n    return {\n      initialValue: null\n    };\n  }\n  if ('hideFields' in options && options.hideFields) {\n    for (var name of options.hideFields) {\n      var _value2 = getValue(context.payload, name);\n      if (typeof _value2 !== 'undefined') {\n        setValue(context.payload, name, () => undefined);\n      }\n    }\n  }\n  var extraError = 'formErrors' in options || 'fieldErrors' in options ? normalize(_objectSpread2({\n    '': (_options$formErrors = options.formErrors) !== null && _options$formErrors !== void 0 ? _options$formErrors : null\n  }, options.fieldErrors)) : null;\n  var error = context.error || extraError ? _objectSpread2(_objectSpread2({}, context.error), extraError) : undefined;\n  var initialValue = (_ref = normalize(context.payload,\n  // We can't serialize the file and send it back from the server, but we can preserve it in the client\n  typeof document !== 'undefined'\n  // We need the file on the client because it's treated as the form value\n  // But we will exclude the File type for now as it's only used by the internal\n  // form state and we will remove the need to preserve the file on the client soon\n  )) !== null && _ref !== void 0 ? _ref : {};\n  return {\n    status: context.intent ? undefined : error ? 'error' : 'success',\n    intent: context.intent ? context.intent : undefined,\n    initialValue,\n    error,\n    state: context.state,\n    fields: Array.from(context.fields)\n  };\n}\nfunction getIntent(serializedIntent) {\n  if (!serializedIntent) {\n    return null;\n  }\n  var control = JSON.parse(serializedIntent);\n  if (typeof control.type !== 'string' || typeof control.payload === 'undefined') {\n    throw new Error('Unknown form control intent');\n  }\n  return control;\n}\nfunction serializeIntent(intent) {\n  switch (intent.type) {\n    case 'insert':\n      return JSON.stringify({\n        type: intent.type,\n        payload: _objectSpread2(_objectSpread2({}, intent.payload), {}, {\n          defaultValue: serialize(intent.payload.defaultValue)\n        })\n      });\n    case 'update':\n      return JSON.stringify({\n        type: intent.type,\n        payload: _objectSpread2(_objectSpread2({}, intent.payload), {}, {\n          value: serialize(intent.payload.value)\n        })\n      });\n    default:\n      return JSON.stringify(intent);\n  }\n}\nfunction updateList(list, intent) {\n  var _intent$payload$index;\n  invariant(Array.isArray(list), \"Failed to update list. The value is not an array.\");\n  switch (intent.type) {\n    case 'insert':\n      list.splice((_intent$payload$index = intent.payload.index) !== null && _intent$payload$index !== void 0 ? _intent$payload$index : list.length, 0, intent.payload.defaultValue);\n      break;\n    case 'remove':\n      list.splice(intent.payload.index, 1);\n      break;\n    case 'reorder':\n      list.splice(intent.payload.to, 0, ...list.splice(intent.payload.from, 1));\n      break;\n    default:\n      throw new Error('Unknown list intent received');\n  }\n}\nfunction setListValue(data, intent) {\n  setValue(data, intent.payload.name, value => {\n    var list = value !== null && value !== void 0 ? value : [];\n    updateList(list, intent);\n    return list;\n  });\n}\n\n/**\n * A placeholder symbol for the root value of a nested object\n */\nvar root = Symbol.for('root');\nfunction setState(state, name, valueFn) {\n  // The keys are sorted in desc so that the root value is handled last\n  var keys = Object.keys(state).sort((prev, next) => next.localeCompare(prev));\n  var target = {};\n  var _loop2 = function _loop2() {\n    var value = state[_key];\n    if (isPrefix(_key, name) && _key !== name) {\n      setValue(target, _key, currentValue => {\n        if (typeof currentValue === 'undefined') {\n          return value;\n        }\n\n        // As the key should be unique, if currentValue is already defined,\n        // it must be either an object or an array\n\n        // @ts-expect-error\n        currentValue[root] = value;\n        return currentValue;\n      });\n\n      // Remove the value from the data\n      delete state[_key];\n    }\n  };\n  for (var _key of keys) {\n    _loop2();\n  }\n  var result = valueFn(getValue(target, name));\n  Object.assign(state, flatten(result, {\n    resolve(data) {\n      if (isPlainObject(data) || Array.isArray(data)) {\n        var _data$root;\n        // @ts-expect-error\n        return (_data$root = data[root]) !== null && _data$root !== void 0 ? _data$root : null;\n      }\n      return data;\n    },\n    prefix: name\n  }));\n}\nfunction setListState(state, intent, getDefaultValue) {\n  setState(state, intent.payload.name, value => {\n    var list = value !== null && value !== void 0 ? value : [];\n    switch (intent.type) {\n      case 'insert':\n        updateList(list, {\n          type: intent.type,\n          payload: _objectSpread2(_objectSpread2({}, intent.payload), {}, {\n            defaultValue: getDefaultValue === null || getDefaultValue === void 0 ? void 0 : getDefaultValue(intent.payload.defaultValue)\n          })\n        });\n        break;\n      default:\n        updateList(list, intent);\n        break;\n    }\n    return list;\n  });\n}\nfunction serialize(defaultValue) {\n  if (isPlainObject(defaultValue)) {\n    // @ts-expect-error FIXME\n    return Object.entries(defaultValue).reduce((result, _ref2) => {\n      var [key, value] = _ref2;\n      result[key] = serialize(value);\n      return result;\n    }, {});\n  } else if (Array.isArray(defaultValue)) {\n    // @ts-expect-error FIXME\n    return defaultValue.map(serialize);\n  } else if (defaultValue instanceof Date) {\n    // @ts-expect-error FIXME\n    return defaultValue.toISOString();\n  } else if (typeof defaultValue === 'boolean') {\n    // @ts-expect-error FIXME\n    return defaultValue ? 'on' : undefined;\n  } else if (typeof defaultValue === 'number' || typeof defaultValue === 'bigint') {\n    // @ts-expect-error FIXME\n    return defaultValue.toString();\n  } else {\n    // @ts-expect-error FIXME\n    return defaultValue !== null && defaultValue !== void 0 ? defaultValue : undefined;\n  }\n}\n\nexport { INTENT, STATE, createSubmission, getIntent, getSubmissionContext, parse, replySubmission, root, serialize, serializeIntent, setListState, setListValue, setState, updateList };\n", "import { invariant } from './util.mjs';\n\n/**\n * Element that user can interact with,\n * includes `<input>`, `<select>` and `<textarea>`.\n */\n\n/**\n * HTML Element that can be used as a form control,\n * includes `<input>`, `<select>`, `<textarea>` and `<button>`.\n */\n\n/**\n * Form Control element. It can either be a submit button or a submit input.\n */\n\n/**\n * A type guard to check if the provided element is a form control\n */\nfunction isFormControl(element) {\n  return element instanceof Element && (element.tagName === 'INPUT' || element.tagName === 'SELECT' || element.tagName === 'TEXTAREA' || element.tagName === 'BUTTON');\n}\n\n/**\n * A type guard to check if the provided element is a field element, which\n * is a form control excluding submit, button and reset type.\n */\nfunction isFieldElement(element) {\n  return isFormControl(element) && element.type !== 'submit' && element.type !== 'button' && element.type !== 'reset';\n}\n\n/**\n * Resolves the action from the submit event\n * with respect to the submitter `formaction` attribute.\n */\nfunction getFormAction(event) {\n  var _ref, _submitter$getAttribu;\n  var form = event.target;\n  var submitter = event.submitter;\n  return (_ref = (_submitter$getAttribu = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute('formaction')) !== null && _submitter$getAttribu !== void 0 ? _submitter$getAttribu : form.getAttribute('action')) !== null && _ref !== void 0 ? _ref : \"\".concat(location.pathname).concat(location.search);\n}\n\n/**\n * Resolves the encoding type from the submit event\n * with respect to the submitter `formenctype` attribute.\n */\nfunction getFormEncType(event) {\n  var _submitter$getAttribu2;\n  var form = event.target;\n  var submitter = event.submitter;\n  var encType = (_submitter$getAttribu2 = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute('formenctype')) !== null && _submitter$getAttribu2 !== void 0 ? _submitter$getAttribu2 : form.enctype;\n  if (encType === 'multipart/form-data') {\n    return encType;\n  }\n  return 'application/x-www-form-urlencoded';\n}\n\n/**\n * Resolves the method from the submit event\n * with respect to the submitter `formmethod` attribute.\n */\nfunction getFormMethod(event) {\n  var _ref2, _submitter$getAttribu3;\n  var form = event.target;\n  var submitter = event.submitter;\n  var method = (_ref2 = (_submitter$getAttribu3 = submitter === null || submitter === void 0 ? void 0 : submitter.getAttribute('formmethod')) !== null && _submitter$getAttribu3 !== void 0 ? _submitter$getAttribu3 : form.getAttribute('method')) === null || _ref2 === void 0 ? void 0 : _ref2.toUpperCase();\n  switch (method) {\n    case 'POST':\n    case 'PUT':\n    case 'PATCH':\n    case 'DELETE':\n      return method;\n  }\n  return 'GET';\n}\n\n/**\n * Trigger a form submit event with an optional submitter.\n * If the submitter is not mounted, it will be appended to the form and removed after submission.\n */\nfunction requestSubmit(form, submitter) {\n  invariant(!!form, 'Failed to submit the form. The element provided is null or undefined.');\n  if (typeof form.requestSubmit === 'function') {\n    form.requestSubmit(submitter);\n  } else {\n    var event = new SubmitEvent('submit', {\n      bubbles: true,\n      cancelable: true,\n      submitter\n    });\n    form.dispatchEvent(event);\n  }\n}\n\nexport { getFormAction, getFormEncType, getFormMethod, isFieldElement, isFormControl, requestSubmit };\n", "import { objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport { flatten, formatName, getValue, isPlainObject, isPrefix, setValue, normalize, getFormData, getPaths, formatPaths } from './formdata.mjs';\nimport { getFormAction, getFormEncType, getFormMethod, isFieldElement, requestSubmit } from './dom.mjs';\nimport { generateId, clone, invariant } from './util.mjs';\nimport { serialize, setListState, setListValue, setState, INTENT, serializeIntent, root, getSubmissionContext } from './submission.mjs';\n\nfunction createFormMeta(options, initialized) {\n  var _lastResult$initialVa, _options$constraint, _lastResult$state$val, _lastResult$state, _ref;\n  var lastResult = !initialized ? options.lastResult : undefined;\n  var defaultValue = options.defaultValue ? serialize(options.defaultValue) : {};\n  var initialValue = (_lastResult$initialVa = lastResult === null || lastResult === void 0 ? void 0 : lastResult.initialValue) !== null && _lastResult$initialVa !== void 0 ? _lastResult$initialVa : defaultValue;\n  var result = {\n    formId: options.formId,\n    isValueUpdated: false,\n    submissionStatus: lastResult === null || lastResult === void 0 ? void 0 : lastResult.status,\n    defaultValue,\n    initialValue,\n    value: initialValue,\n    constraint: (_options$constraint = options.constraint) !== null && _options$constraint !== void 0 ? _options$constraint : {},\n    validated: (_lastResult$state$val = lastResult === null || lastResult === void 0 || (_lastResult$state = lastResult.state) === null || _lastResult$state === void 0 ? void 0 : _lastResult$state.validated) !== null && _lastResult$state$val !== void 0 ? _lastResult$state$val : {},\n    key: !initialized ? getDefaultKey(defaultValue) : _objectSpread2({\n      '': generateId()\n    }, getDefaultKey(defaultValue)),\n    // The `lastResult` should comes from the server which we won't expect the error to be null\n    // We can consider adding a warning if it happens\n    error: (_ref = lastResult === null || lastResult === void 0 ? void 0 : lastResult.error) !== null && _ref !== void 0 ? _ref : {}\n  };\n  handleIntent(result, lastResult === null || lastResult === void 0 ? void 0 : lastResult.intent, lastResult === null || lastResult === void 0 ? void 0 : lastResult.fields);\n  return result;\n}\nfunction getDefaultKey(defaultValue, prefix) {\n  return Object.entries(flatten(defaultValue, {\n    prefix\n  })).reduce((result, _ref2) => {\n    var [key, value] = _ref2;\n    if (Array.isArray(value)) {\n      for (var i = 0; i < value.length; i++) {\n        result[formatName(key, i)] = generateId();\n      }\n    }\n    return result;\n  }, {});\n}\nfunction setFieldsValidated(meta, fields) {\n  for (var _name of Object.keys(meta.error).concat(fields !== null && fields !== void 0 ? fields : [])) {\n    meta.validated[_name] = true;\n  }\n}\nfunction handleIntent(meta, intent, fields, initialized) {\n  var _fields$filter;\n  if (!intent) {\n    setFieldsValidated(meta, fields);\n    return;\n  }\n  switch (intent.type) {\n    case 'validate':\n      {\n        if (intent.payload.name) {\n          meta.validated[intent.payload.name] = true;\n        } else {\n          setFieldsValidated(meta, fields);\n        }\n        break;\n      }\n    case 'update':\n      {\n        var {\n          validated,\n          value\n        } = intent.payload;\n        var _name2 = formatName(intent.payload.name, intent.payload.index);\n        if (typeof value !== 'undefined') {\n          updateValue(meta, _name2 !== null && _name2 !== void 0 ? _name2 : '', value);\n        }\n        if (typeof validated !== 'undefined') {\n          // Clean up previous validated state\n          if (_name2) {\n            setState(meta.validated, _name2, () => undefined);\n          } else {\n            meta.validated = {};\n          }\n          if (validated) {\n            if (isPlainObject(value) || Array.isArray(value)) {\n              Object.assign(meta.validated, flatten(value, {\n                resolve() {\n                  return true;\n                },\n                prefix: _name2\n              }));\n            }\n            meta.validated[_name2 !== null && _name2 !== void 0 ? _name2 : ''] = true;\n          } else if (_name2) {\n            delete meta.validated[_name2];\n          }\n        }\n        break;\n      }\n    case 'reset':\n      {\n        var _name3 = formatName(intent.payload.name, intent.payload.index);\n        var _value = getValue(meta.defaultValue, _name3);\n        updateValue(meta, _name3, _value);\n        if (_name3) {\n          setState(meta.validated, _name3, () => undefined);\n          delete meta.validated[_name3];\n        } else {\n          meta.validated = {};\n        }\n        break;\n      }\n    case 'insert':\n    case 'remove':\n    case 'reorder':\n      {\n        if (initialized) {\n          meta.initialValue = clone(meta.initialValue);\n          meta.key = clone(meta.key);\n          setListState(meta.key, intent, defaultValue => {\n            if (!Array.isArray(defaultValue) && !isPlainObject(defaultValue)) {\n              return generateId();\n            }\n            return Object.assign(getDefaultKey(defaultValue), {\n              [root]: generateId()\n            });\n          });\n          setListValue(meta.initialValue, intent);\n        }\n        setListState(meta.validated, intent);\n        meta.validated[intent.payload.name] = true;\n        break;\n      }\n  }\n  var validatedFields = (_fields$filter = fields === null || fields === void 0 ? void 0 : fields.filter(name => meta.validated[name])) !== null && _fields$filter !== void 0 ? _fields$filter : [];\n  meta.error = Object.entries(meta.error).reduce((result, _ref3) => {\n    var [name, error] = _ref3;\n    if (meta.validated[name] || validatedFields.some(field => isPrefix(name, field))) {\n      result[name] = error;\n    }\n    return result;\n  }, {});\n}\nfunction updateValue(meta, name, value) {\n  if (name === '') {\n    meta.initialValue = value;\n    meta.value = value;\n    meta.key = _objectSpread2(_objectSpread2({}, getDefaultKey(value)), {}, {\n      '': generateId()\n    });\n    return;\n  }\n  meta.initialValue = clone(meta.initialValue);\n  meta.value = clone(meta.value);\n  meta.key = clone(meta.key);\n  setValue(meta.initialValue, name, () => value);\n  setValue(meta.value, name, () => value);\n  if (isPlainObject(value) || Array.isArray(value)) {\n    setState(meta.key, name, () => undefined);\n    Object.assign(meta.key, getDefaultKey(value, name));\n  }\n  meta.key[name] = generateId();\n}\nfunction createStateProxy(fn) {\n  var cache = {};\n  return new Proxy(cache, {\n    get(_, name, receiver) {\n      var _cache$name;\n      if (typeof name !== 'string') {\n        return;\n      }\n      return (_cache$name = cache[name]) !== null && _cache$name !== void 0 ? _cache$name : cache[name] = fn(name, receiver);\n    }\n  });\n}\nfunction createValueProxy(value) {\n  var val = normalize(value);\n  return createStateProxy((name, proxy) => {\n    if (name === '') {\n      return val;\n    }\n    var paths = getPaths(name);\n    var basename = formatPaths(paths.slice(0, -1));\n    var key = formatPaths(paths.slice(-1));\n    var parentValue = proxy[basename];\n    return getValue(parentValue, key);\n  });\n}\nfunction createConstraintProxy(constraint) {\n  return createStateProxy((name, proxy) => {\n    var _result;\n    var result = constraint[name];\n    if (!result) {\n      var paths = getPaths(name);\n      for (var i = paths.length - 1; i >= 0; i--) {\n        var path = paths[i];\n        if (typeof path === 'number' && !Number.isNaN(path)) {\n          paths[i] = Number.NaN;\n          break;\n        }\n      }\n      var alternative = formatPaths(paths);\n      if (name !== alternative) {\n        result = proxy[alternative];\n      }\n    }\n    return (_result = result) !== null && _result !== void 0 ? _result : {};\n  });\n}\nfunction createKeyProxy(key) {\n  return createStateProxy((name, proxy) => {\n    var currentKey = key[name];\n    var paths = getPaths(name);\n    if (paths.length === 0) {\n      return currentKey;\n    }\n    var parentKey = proxy[formatPaths(paths.slice(0, -1))];\n    if (typeof parentKey === 'undefined') {\n      return currentKey;\n    }\n    return \"\".concat(parentKey, \"/\").concat(currentKey !== null && currentKey !== void 0 ? currentKey : paths.at(-1));\n  });\n}\nfunction createValidProxy(error) {\n  return createStateProxy(name => {\n    var keys = Object.keys(error);\n    if (name === '') {\n      return keys.length === 0;\n    }\n    for (var key of keys) {\n      if (isPrefix(key, name) && typeof error[key] !== 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  });\n}\nfunction createDirtyProxy(defaultValue, value, shouldDirtyConsider) {\n  return createStateProxy(name => JSON.stringify(defaultValue[name]) !== JSON.stringify(value[name], (key, value) => {\n    if (name === '' && key === '' && value) {\n      return Object.entries(value).reduce((result, _ref4) => {\n        var [name, value] = _ref4;\n        if (!shouldDirtyConsider(name)) {\n          return result;\n        }\n        return Object.assign(result !== null && result !== void 0 ? result : {}, {\n          [name]: value\n        });\n      }, undefined);\n    }\n    return value;\n  }));\n}\nfunction shouldNotify(prev, next, cache, scope) {\n  var compareFn = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : (prev, next) => JSON.stringify(prev) !== JSON.stringify(next);\n  if (scope && prev !== next) {\n    var _scope$prefix, _scope$name;\n    var prefixes = (_scope$prefix = scope.prefix) !== null && _scope$prefix !== void 0 ? _scope$prefix : [];\n    var names = (_scope$name = scope.name) !== null && _scope$name !== void 0 ? _scope$name : [];\n    var list = prefixes.length === 0 ? names : Array.from(new Set([...Object.keys(prev), ...Object.keys(next)]));\n    var _loop = function _loop(_name4) {\n        if (prefixes.length === 0 || names.includes(_name4) || prefixes.some(prefix => isPrefix(_name4, prefix))) {\n          var _cache$_name;\n          (_cache$_name = cache[_name4]) !== null && _cache$_name !== void 0 ? _cache$_name : cache[_name4] = compareFn(prev[_name4], next[_name4]);\n          if (cache[_name4]) {\n            return {\n              v: true\n            };\n          }\n        }\n      },\n      _ret;\n    for (var _name4 of list) {\n      _ret = _loop(_name4);\n      if (_ret) return _ret.v;\n    }\n  }\n  return false;\n}\nfunction createFormContext(options) {\n  var subscribers = [];\n  var latestOptions = options;\n  var meta = createFormMeta(options);\n  var state = createFormState(meta);\n  function getFormElement() {\n    return document.forms.namedItem(latestOptions.formId);\n  }\n  function createFormState(next) {\n    var prev = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : next;\n    var state = arguments.length > 2 ? arguments[2] : undefined;\n    var defaultValue = !state || prev.defaultValue !== next.defaultValue ? createValueProxy(next.defaultValue) : state.defaultValue;\n    var initialValue = next.initialValue === next.defaultValue ? defaultValue : !state || prev.initialValue !== next.initialValue ? createValueProxy(next.initialValue) : state.initialValue;\n    var value = next.value === next.initialValue ? initialValue : !state || prev.value !== next.value ? createValueProxy(next.value) : state.value;\n    return {\n      submissionStatus: next.submissionStatus,\n      defaultValue,\n      initialValue,\n      value,\n      error: !state || prev.error !== next.error ? next.error : state.error,\n      validated: next.validated,\n      constraint: !state || prev.constraint !== next.constraint ? createConstraintProxy(next.constraint) : state.constraint,\n      key: !state || prev.key !== next.key ? createKeyProxy(next.key) : state.key,\n      valid: !state || prev.error !== next.error ? createValidProxy(next.error) : state.valid,\n      dirty: !state || prev.defaultValue !== next.defaultValue || prev.value !== next.value ? createDirtyProxy(defaultValue, value, key => {\n        var _latestOptions$should, _latestOptions$should2;\n        return (_latestOptions$should = (_latestOptions$should2 = latestOptions.shouldDirtyConsider) === null || _latestOptions$should2 === void 0 ? void 0 : _latestOptions$should2.call(latestOptions, key)) !== null && _latestOptions$should !== void 0 ? _latestOptions$should : true;\n      }) : state.dirty\n    };\n  }\n  function updateFormMeta(nextMeta) {\n    var prevMeta = meta;\n    var prevState = state;\n    var nextState = createFormState(nextMeta, prevMeta, prevState);\n\n    // Apply change before notifying subscribers\n    meta = nextMeta;\n    state = nextState;\n    var cache = {\n      value: {},\n      error: {},\n      initialValue: {},\n      key: {},\n      valid: {},\n      dirty: {}\n    };\n    for (var subscriber of subscribers) {\n      var _subscriber$getSubjec;\n      var subject = (_subscriber$getSubjec = subscriber.getSubject) === null || _subscriber$getSubjec === void 0 ? void 0 : _subscriber$getSubjec.call(subscriber);\n      if (!subject || subject.formId && prevMeta.formId !== nextMeta.formId || subject.status && prevState.submissionStatus !== nextState.submissionStatus || shouldNotify(prevState.error, nextState.error, cache.error, subject.error) || shouldNotify(prevState.initialValue, nextState.initialValue, cache.initialValue, subject.initialValue) || shouldNotify(prevState.key, nextState.key, cache.key, subject.key, (prev, next) => prev !== next) || shouldNotify(prevState.valid, nextState.valid, cache.valid, subject.valid, compareBoolean) || shouldNotify(prevState.dirty, nextState.dirty, cache.dirty, subject.dirty, compareBoolean) || shouldNotify(prevState.value, nextState.value, cache.value, subject.value)) {\n        subscriber.callback();\n      }\n    }\n  }\n  function compareBoolean() {\n    var prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return prev !== next;\n  }\n  function getSerializedState() {\n    return JSON.stringify({\n      validated: meta.validated\n    });\n  }\n  function submit(event) {\n    var form = event.target;\n    var submitter = event.submitter;\n    invariant(form === getFormElement(), \"The submit event is dispatched by form#\".concat(form.id, \" instead of form#\").concat(latestOptions.formId));\n    var formData = getFormData(form, submitter);\n    var result = {\n      formData,\n      action: getFormAction(event),\n      encType: getFormEncType(event),\n      method: getFormMethod(event)\n    };\n    if (typeof (latestOptions === null || latestOptions === void 0 ? void 0 : latestOptions.onValidate) === 'undefined') {\n      return result;\n    }\n    var submission = latestOptions.onValidate({\n      form,\n      formData,\n      submitter\n    });\n    if (submission.status === 'success' || submission.error !== null) {\n      var _result2 = submission.reply();\n      report(_objectSpread2(_objectSpread2({}, _result2), {}, {\n        status: _result2.status !== 'success' ? _result2.status : undefined\n      }));\n    }\n    return _objectSpread2(_objectSpread2({}, result), {}, {\n      submission\n    });\n  }\n  function resolveTarget(event) {\n    var form = getFormElement();\n    var element = event.target;\n    if (!form || !isFieldElement(element) || element.form !== form || !element.form.isConnected || element.name === '') {\n      return null;\n    }\n    return element;\n  }\n  function willValidate(element, eventName) {\n    var {\n      shouldValidate = 'onSubmit',\n      shouldRevalidate = shouldValidate\n    } = latestOptions;\n    var validated = meta.validated[element.name];\n    return validated ? shouldRevalidate === eventName && (eventName === 'onInput' || meta.isValueUpdated) : shouldValidate === eventName;\n  }\n  function updateFormValue(form) {\n    var formData = new FormData(form);\n    var result = getSubmissionContext(formData);\n    updateFormMeta(_objectSpread2(_objectSpread2({}, meta), {}, {\n      isValueUpdated: true,\n      value: result.payload\n    }));\n  }\n  function onInput(event) {\n    var element = resolveTarget(event);\n    if (!element || !element.form) {\n      return;\n    }\n    if (event.defaultPrevented || !willValidate(element, 'onInput')) {\n      updateFormValue(element.form);\n    } else {\n      dispatch({\n        type: 'validate',\n        payload: {\n          name: element.name\n        }\n      });\n    }\n  }\n  function onBlur(event) {\n    var element = resolveTarget(event);\n    if (!element || event.defaultPrevented || !willValidate(element, 'onBlur')) {\n      return;\n    }\n    dispatch({\n      type: 'validate',\n      payload: {\n        name: element.name\n      }\n    });\n  }\n  function reset() {\n    updateFormMeta(createFormMeta(latestOptions, true));\n  }\n  function onReset(event) {\n    var element = getFormElement();\n    if (event.type !== 'reset' || event.target !== element || event.defaultPrevented) {\n      return;\n    }\n    reset();\n  }\n  function report(result) {\n    var _result$error, _result$state;\n    var formElement = getFormElement();\n    if (!result.initialValue) {\n      reset();\n      return;\n    }\n    var error = Object.entries((_result$error = result.error) !== null && _result$error !== void 0 ? _result$error : {}).reduce((result, _ref5) => {\n      var [name, newError] = _ref5;\n      var error = newError === null ? meta.error[name] : newError;\n      if (error) {\n        result[name] = error;\n      }\n      return result;\n    }, {});\n    var update = _objectSpread2(_objectSpread2({}, meta), {}, {\n      isValueUpdated: false,\n      submissionStatus: result.status,\n      value: result.initialValue,\n      validated: _objectSpread2(_objectSpread2({}, meta.validated), (_result$state = result.state) === null || _result$state === void 0 ? void 0 : _result$state.validated),\n      error\n    });\n    handleIntent(update, result.intent, result.fields, true);\n    updateFormMeta(update);\n    if (formElement && result.status === 'error') {\n      for (var element of formElement.elements) {\n        if (isFieldElement(element) && meta.error[element.name]) {\n          element.focus();\n          break;\n        }\n      }\n    }\n  }\n  function onUpdate(options) {\n    var currentFormId = latestOptions.formId;\n    var currentResult = latestOptions.lastResult;\n\n    // Merge new options with the latest options\n    Object.assign(latestOptions, options);\n    if (latestOptions.formId !== currentFormId) {\n      reset();\n    } else if (options.lastResult && options.lastResult !== currentResult) {\n      report(options.lastResult);\n    }\n  }\n  function subscribe(callback, getSubject) {\n    var subscriber = {\n      callback,\n      getSubject\n    };\n    subscribers.push(subscriber);\n    return () => {\n      subscribers = subscribers.filter(current => current !== subscriber);\n    };\n  }\n  function getState() {\n    return state;\n  }\n  function dispatch(intent) {\n    var form = getFormElement();\n    var submitter = document.createElement('button');\n    var buttonProps = getControlButtonProps(intent);\n    submitter.name = buttonProps.name;\n    submitter.value = buttonProps.value;\n    submitter.hidden = true;\n    submitter.formNoValidate = true;\n    form === null || form === void 0 || form.appendChild(submitter);\n    requestSubmit(form, submitter);\n    form === null || form === void 0 || form.removeChild(submitter);\n  }\n  function getControlButtonProps(intent) {\n    return {\n      name: INTENT,\n      value: serializeIntent(intent),\n      form: latestOptions.formId,\n      formNoValidate: true\n    };\n  }\n  function createFormControl(type) {\n    var control = function control() {\n      var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return dispatch({\n        type,\n        payload\n      });\n    };\n    return Object.assign(control, {\n      getButtonProps() {\n        var payload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return getControlButtonProps({\n          type,\n          payload\n        });\n      }\n    });\n  }\n  function observe() {\n    var observer = new MutationObserver(mutations => {\n      var form = getFormElement();\n      if (!form) {\n        return;\n      }\n      for (var mutation of mutations) {\n        var nodes = mutation.type === 'childList' ? [...mutation.addedNodes, ...mutation.removedNodes] : [mutation.target];\n        for (var node of nodes) {\n          var element = isFieldElement(node) ? node : node instanceof HTMLElement ? node.querySelector('input,select,textarea') : null;\n          if ((element === null || element === void 0 ? void 0 : element.form) === form) {\n            updateFormValue(form);\n            return;\n          }\n        }\n      }\n    });\n    observer.observe(document, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: ['form', 'name']\n    });\n    return () => {\n      observer.disconnect();\n    };\n  }\n  return {\n    getFormId() {\n      return meta.formId;\n    },\n    submit,\n    onReset,\n    onInput,\n    onBlur,\n    onUpdate,\n    validate: createFormControl('validate'),\n    reset: createFormControl('reset'),\n    update: createFormControl('update'),\n    insert: createFormControl('insert'),\n    remove: createFormControl('remove'),\n    reorder: createFormControl('reorder'),\n    subscribe,\n    getState,\n    getSerializedState,\n    observe\n  };\n}\n\nexport { createFormContext };\n"],
  "mappings": "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",
  "names": ["r", "data", "_loop", "next", "_loop2", "value", "name", "prev", "next", "_loop", "_name4", "state", "result", "error", "options", "control"]
}
