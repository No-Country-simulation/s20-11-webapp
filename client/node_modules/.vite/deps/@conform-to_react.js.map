{
  "version": 3,
  "sources": ["../../@conform-to/react/_virtual/_rollupPluginBabelHelpers.mjs", "../../@conform-to/react/context.mjs", "../../@conform-to/react/hooks.mjs", "../../@conform-to/react/integrations.mjs", "../../@conform-to/react/helpers.mjs"],
  "sourcesContent": ["function ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nexport { _defineProperty as defineProperty, _objectSpread2 as objectSpread2, _objectWithoutProperties as objectWithoutProperties, _objectWithoutPropertiesLoose as objectWithoutPropertiesLoose, _toPrimitive as toPrimitive, _toPropertyKey as toPropertyKey };\n", "import { objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport { STATE, formatPaths, getPaths, unstable_createFormContext, INTENT, isPrefix } from '@conform-to/dom';\nimport { useContext, useMemo, createContext, useCallback, useSyncExternalStore, useRef } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\nvar Form = /*#__PURE__*/createContext([]);\n\n// To hide the FormContext type from the public API\nvar wrappedSymbol = Symbol('wrapped');\nfunction getWrappedFormContext(context) {\n  return context[wrappedSymbol];\n}\nfunction useFormContext(formId) {\n  var contexts = useContext(Form);\n  var form = formId ? contexts.find(context => formId === context.getFormId()) : contexts[0];\n  if (!form) {\n    throw new Error('Form context is not available');\n  }\n  return form;\n}\nfunction useFormState(form, subjectRef) {\n  var subscribe = useCallback(callback => form.subscribe(callback, () => subjectRef === null || subjectRef === void 0 ? void 0 : subjectRef.current), [form, subjectRef]);\n  return useSyncExternalStore(subscribe, form.getState, form.getState);\n}\nfunction FormProvider(props) {\n  var forms = useContext(Form);\n  var context = getWrappedFormContext(props.context);\n  var value = useMemo(() => [context].concat(forms),\n  // Put the latest form context first\n  [forms, context]);\n  return /*#__PURE__*/jsx(Form.Provider, {\n    value: value,\n    children: props.children\n  });\n}\nfunction FormStateInput(props) {\n  var context = useFormContext(props.formId);\n  return /*#__PURE__*/jsx(\"input\", {\n    type: \"hidden\",\n    name: STATE,\n    value: context.getSerializedState(),\n    form: props.formId\n  });\n}\nfunction useSubjectRef() {\n  var initialSubject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var subjectRef = useRef(initialSubject);\n\n  // Reset the subject everytime the component is rerendered\n  // This let us subscribe to data used in the last render only\n  subjectRef.current = initialSubject;\n  return subjectRef;\n}\nfunction updateSubjectRef(ref, subject, scope, name) {\n  if (subject === 'status' || subject === 'formId') {\n    ref.current[subject] = true;\n  } else if (typeof scope !== 'undefined' && typeof name !== 'undefined') {\n    var _ref$current$subject$, _ref$current$subject;\n    ref.current[subject] = _objectSpread2(_objectSpread2({}, ref.current[subject]), {}, {\n      [scope]: ((_ref$current$subject$ = (_ref$current$subject = ref.current[subject]) === null || _ref$current$subject === void 0 ? void 0 : _ref$current$subject[scope]) !== null && _ref$current$subject$ !== void 0 ? _ref$current$subject$ : []).concat(name)\n    });\n  }\n}\nfunction getMetadata(context, subjectRef, stateSnapshot) {\n  var name = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var id = name ? \"\".concat(context.getFormId(), \"-\").concat(name) : context.getFormId();\n  var state = context.getState();\n  return new Proxy({\n    id,\n    name,\n    errorId: \"\".concat(id, \"-error\"),\n    descriptionId: \"\".concat(id, \"-description\"),\n    get initialValue() {\n      return state.initialValue[name];\n    },\n    get value() {\n      return state.value[name];\n    },\n    get errors() {\n      return state.error[name];\n    },\n    get key() {\n      return state.key[name];\n    },\n    get valid() {\n      return state.valid[name];\n    },\n    get dirty() {\n      return state.dirty[name];\n    },\n    get allErrors() {\n      if (name === '') {\n        return state.error;\n      }\n      var result = {};\n      for (var [key, error] of Object.entries(state.error)) {\n        if (isPrefix(key, name)) {\n          result[key] = error;\n        }\n      }\n      return result;\n    },\n    get getFieldset() {\n      return () => new Proxy({}, {\n        get(target, key, receiver) {\n          if (typeof key === 'string') {\n            return getFieldMetadata(context, subjectRef, stateSnapshot, name, key);\n          }\n          return Reflect.get(target, key, receiver);\n        }\n      });\n    }\n  }, {\n    get(target, key, receiver) {\n      // We want to minize re-render by identifying whether the field is used in a callback only\n      // but there is no clear way to know if it is accessed during render or not\n      // if the stateSnapshot is not the latest, then it must be accessed in a callback\n      if (state === stateSnapshot) {\n        switch (key) {\n          case 'id':\n          case 'errorId':\n          case 'descriptionId':\n            updateSubjectRef(subjectRef, 'formId');\n            break;\n          case 'key':\n          case 'initialValue':\n          case 'value':\n          case 'valid':\n          case 'dirty':\n            updateSubjectRef(subjectRef, key, 'name', name);\n            break;\n          case 'errors':\n          case 'allErrors':\n            updateSubjectRef(subjectRef, 'error', key === 'errors' ? 'name' : 'prefix', name);\n            break;\n        }\n      }\n      return Reflect.get(target, key, receiver);\n    }\n  });\n}\nfunction getFieldMetadata(context, subjectRef, stateSnapshot) {\n  var prefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var key = arguments.length > 4 ? arguments[4] : undefined;\n  var name = typeof key === 'undefined' ? prefix : formatPaths([...getPaths(prefix), key]);\n  return new Proxy({}, {\n    get(_, key, receiver) {\n      var _state$constraint$nam;\n      var metadata = getMetadata(context, subjectRef, stateSnapshot, name);\n      var state = context.getState();\n      switch (key) {\n        case 'formId':\n          if (state === stateSnapshot) {\n            updateSubjectRef(subjectRef, 'formId');\n          }\n          return context.getFormId();\n        case 'required':\n        case 'minLength':\n        case 'maxLength':\n        case 'min':\n        case 'max':\n        case 'pattern':\n        case 'step':\n        case 'multiple':\n          return (_state$constraint$nam = state.constraint[name]) === null || _state$constraint$nam === void 0 ? void 0 : _state$constraint$nam[key];\n        case 'getFieldList':\n          {\n            return () => {\n              var _state$initialValue$n;\n              var initialValue = (_state$initialValue$n = state.initialValue[name]) !== null && _state$initialValue$n !== void 0 ? _state$initialValue$n : [];\n              if (state === stateSnapshot) {\n                updateSubjectRef(subjectRef, 'initialValue', 'name', name);\n              }\n              if (!Array.isArray(initialValue)) {\n                throw new Error('The initial value at the given name is not a list');\n              }\n              return Array(initialValue.length).fill(0).map((_, index) => getFieldMetadata(context, subjectRef, stateSnapshot, name, index));\n            };\n          }\n      }\n      return Reflect.get(metadata, key, receiver);\n    }\n  });\n}\nfunction getFormMetadata(context, subjectRef, stateSnapshot, noValidate) {\n  return new Proxy({}, {\n    get(_, key, receiver) {\n      var metadata = getMetadata(context, subjectRef, stateSnapshot);\n      var state = context.getState();\n      switch (key) {\n        case 'context':\n          return {\n            [wrappedSymbol]: context\n          };\n        case 'status':\n          if (state === stateSnapshot) {\n            updateSubjectRef(subjectRef, 'status');\n          }\n          return state.submissionStatus;\n        case 'validate':\n        case 'update':\n        case 'reset':\n        case 'insert':\n        case 'remove':\n        case 'reorder':\n          return context[key];\n        case 'onSubmit':\n          return context.submit;\n        case 'noValidate':\n          return noValidate;\n      }\n      return Reflect.get(metadata, key, receiver);\n    }\n  });\n}\nfunction createFormContext(options) {\n  var {\n    onSubmit\n  } = options;\n  var context = unstable_createFormContext(options);\n  return _objectSpread2(_objectSpread2({}, context), {}, {\n    submit(event) {\n      var submitEvent = event.nativeEvent;\n      var result = context.submit(submitEvent);\n      if (!result.submission || result.submission.status === 'success' || result.submission.error === null) {\n        if (!result.formData.has(INTENT)) {\n          var _onSubmit;\n          (_onSubmit = onSubmit) === null || _onSubmit === void 0 || _onSubmit(event, result);\n        }\n      } else {\n        event.preventDefault();\n      }\n    },\n    onUpdate(options) {\n      onSubmit = options.onSubmit;\n      context.onUpdate(options);\n    }\n  });\n}\n\nexport { Form, FormProvider, FormStateInput, createFormContext, getFieldMetadata, getFormMetadata, getMetadata, getWrappedFormContext, updateSubjectRef, useFormContext, useFormState, useSubjectRef };\n", "import { objectWithoutProperties as _objectWithoutProperties, objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.mjs';\nimport { useState, useEffect, useLayoutEffect, useId } from 'react';\nimport { createFormContext, useSubjectRef, useFormState, getFormMetadata, useFormContext, getFieldMetadata } from './context.mjs';\n\nvar _excluded = [\"id\"];\n\n/**\n * useLayoutEffect is client-only.\n * This basically makes it a no-op on server\n */\nvar useSafeLayoutEffect = typeof document === 'undefined' ? useEffect : useLayoutEffect;\nfunction useFormId(preferredId) {\n  var id = useId();\n  return preferredId !== null && preferredId !== void 0 ? preferredId : id;\n}\nfunction useNoValidate() {\n  var defaultNoValidate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var [noValidate, setNoValidate] = useState(defaultNoValidate);\n  useSafeLayoutEffect(() => {\n    // This is necessary to fix an issue in strict mode with related to our proxy setup\n    // It avoids the component from being rerendered without re-rendering the child\n    // Which reset the proxy but failed to capture its usage within child component\n    if (!noValidate) {\n      setNoValidate(true);\n    }\n  }, [noValidate]);\n  return noValidate;\n}\nfunction useForm(options) {\n  var {\n      id\n    } = options,\n    formConfig = _objectWithoutProperties(options, _excluded);\n  var formId = useFormId(id);\n  var [context] = useState(() => createFormContext(_objectSpread2(_objectSpread2({}, formConfig), {}, {\n    formId\n  })));\n  useSafeLayoutEffect(() => {\n    var disconnect = context.observe();\n    document.addEventListener('input', context.onInput);\n    document.addEventListener('focusout', context.onBlur);\n    document.addEventListener('reset', context.onReset);\n    return () => {\n      disconnect();\n      document.removeEventListener('input', context.onInput);\n      document.removeEventListener('focusout', context.onBlur);\n      document.removeEventListener('reset', context.onReset);\n    };\n  }, [context]);\n  useSafeLayoutEffect(() => {\n    context.onUpdate(_objectSpread2(_objectSpread2({}, formConfig), {}, {\n      formId\n    }));\n  });\n  var subjectRef = useSubjectRef();\n  var stateSnapshot = useFormState(context, subjectRef);\n  var noValidate = useNoValidate(options.defaultNoValidate);\n  var form = getFormMetadata(context, subjectRef, stateSnapshot, noValidate);\n  return [form, form.getFieldset()];\n}\nfunction useFormMetadata(formId) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var subjectRef = useSubjectRef();\n  var context = useFormContext(formId);\n  var stateSnapshot = useFormState(context, subjectRef);\n  var noValidate = useNoValidate(options.defaultNoValidate);\n  return getFormMetadata(context, subjectRef, stateSnapshot, noValidate);\n}\nfunction useField(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var subjectRef = useSubjectRef();\n  var context = useFormContext(options.formId);\n  var stateSnapshot = useFormState(context, subjectRef);\n  var field = getFieldMetadata(context, subjectRef, stateSnapshot, name);\n  var form = getFormMetadata(context, subjectRef, stateSnapshot, false);\n  return [field, form];\n}\n\nexport { useField, useForm, useFormId, useFormMetadata, useNoValidate, useSafeLayoutEffect };\n", "import { useRef, useEffect, useMemo, useState } from 'react';\n\nfunction getFormElement(formId) {\n  return document.forms.namedItem(formId);\n}\nfunction getFieldElements(form, name) {\n  var field = form === null || form === void 0 ? void 0 : form.elements.namedItem(name);\n  var elements = !field ? [] : field instanceof Element ? [field] : Array.from(field.values());\n  return elements.filter(element => element instanceof HTMLInputElement || element instanceof HTMLSelectElement || element instanceof HTMLTextAreaElement);\n}\nfunction getEventTarget(form, name, value) {\n  var _elements$;\n  var elements = getFieldElements(form, name);\n  if (elements.length > 1) {\n    var options = typeof value === 'string' ? [value] : value;\n    for (var element of elements) {\n      if (typeof options !== 'undefined' && element instanceof HTMLInputElement && element.type === 'checkbox' && (element.checked ? options.includes(element.value) : !options.includes(element.value))) {\n        continue;\n      }\n      return element;\n    }\n  }\n  return (_elements$ = elements[0]) !== null && _elements$ !== void 0 ? _elements$ : null;\n}\nfunction createDummySelect(form, name, value) {\n  var select = document.createElement('select');\n  var options = typeof value === 'string' ? [value] : value !== null && value !== void 0 ? value : [];\n  select.name = name;\n  select.multiple = true;\n  select.dataset.conform = 'true';\n\n  // To make sure the input is hidden but still focusable\n  select.setAttribute('aria-hidden', 'true');\n  select.tabIndex = -1;\n  select.style.position = 'absolute';\n  select.style.width = '1px';\n  select.style.height = '1px';\n  select.style.padding = '0';\n  select.style.margin = '-1px';\n  select.style.overflow = 'hidden';\n  select.style.clip = 'rect(0,0,0,0)';\n  select.style.whiteSpace = 'nowrap';\n  select.style.border = '0';\n  for (var option of options) {\n    select.options.add(new Option(option, option, true, true));\n  }\n  form.appendChild(select);\n  return select;\n}\nfunction isDummySelect(element) {\n  return element.dataset.conform === 'true';\n}\nfunction updateFieldValue(element, value) {\n  if (element instanceof HTMLInputElement && (element.type === 'checkbox' || element.type === 'radio')) {\n    element.checked = Array.isArray(value) ? value.includes(element.value) : element.value === value;\n  } else if (element instanceof HTMLSelectElement && element.multiple) {\n    var selectedValue = Array.isArray(value) ? [...value] : [value];\n    for (var option of element.options) {\n      var index = selectedValue.indexOf(option.value);\n      var selected = index > -1;\n\n      // Update the selected state of the option\n      option.selected = selected;\n      // Remove the option from the selected array\n      if (selected) {\n        selectedValue.splice(index, 1);\n      }\n    }\n\n    // Add the remaining options to the select element only if it's a dummy element managed by conform\n    if (isDummySelect(element)) {\n      for (var _option of selectedValue) {\n        element.options.add(new Option(_option, _option, false, true));\n      }\n    }\n  } else if (element.value !== value) {\n    // No `change` event will be triggered on React if `element.value` is already updated\n\n    /**\n     * Triggering react custom change event\n     * Solution based on dom-testing-library\n     * @see https://github.com/facebook/react/issues/10135#issuecomment-401496776\n     * @see https://github.com/testing-library/dom-testing-library/blob/main/src/events.js#L104-L123\n     */\n    var {\n      set: valueSetter\n    } = Object.getOwnPropertyDescriptor(element, 'value') || {};\n    var prototype = Object.getPrototypeOf(element);\n    var {\n      set: prototypeValueSetter\n    } = Object.getOwnPropertyDescriptor(prototype, 'value') || {};\n    if (prototypeValueSetter && valueSetter !== prototypeValueSetter) {\n      prototypeValueSetter.call(element, value);\n    } else {\n      if (valueSetter) {\n        valueSetter.call(element, value);\n      } else {\n        throw new Error('The given element does not have a value setter');\n      }\n    }\n  }\n}\nfunction useInputEvent() {\n  var ref = useRef(null);\n  var eventDispatched = useRef({\n    change: false,\n    focus: false,\n    blur: false\n  });\n  useEffect(() => {\n    var createEventListener = listener => {\n      return event => {\n        var element = ref.current;\n        if (element && event.target === element) {\n          eventDispatched.current[listener] = true;\n        }\n      };\n    };\n    var inputHandler = createEventListener('change');\n    var focusHandler = createEventListener('focus');\n    var blurHandler = createEventListener('blur');\n    document.addEventListener('input', inputHandler, true);\n    document.addEventListener('focusin', focusHandler, true);\n    document.addEventListener('focusout', blurHandler, true);\n    return () => {\n      document.removeEventListener('input', inputHandler, true);\n      document.removeEventListener('focusin', focusHandler, true);\n      document.removeEventListener('focusout', blurHandler, true);\n    };\n  }, [ref]);\n  return useMemo(() => {\n    return {\n      change(value) {\n        if (!eventDispatched.current.change) {\n          eventDispatched.current.change = true;\n          var element = ref.current;\n          if (element) {\n            updateFieldValue(element, value);\n\n            // Dispatch input event with the updated input value\n            element.dispatchEvent(new InputEvent('input', {\n              bubbles: true\n            }));\n            // Dispatch change event (necessary for select to update the selected option)\n            element.dispatchEvent(new Event('change', {\n              bubbles: true\n            }));\n          }\n        }\n        eventDispatched.current.change = false;\n      },\n      focus() {\n        if (!eventDispatched.current.focus) {\n          eventDispatched.current.focus = true;\n          var element = ref.current;\n          if (element) {\n            element.dispatchEvent(new FocusEvent('focusin', {\n              bubbles: true\n            }));\n            element.dispatchEvent(new FocusEvent('focus'));\n          }\n        }\n        eventDispatched.current.focus = false;\n      },\n      blur() {\n        if (!eventDispatched.current.blur) {\n          eventDispatched.current.blur = true;\n          var element = ref.current;\n          if (element) {\n            element.dispatchEvent(new FocusEvent('focusout', {\n              bubbles: true\n            }));\n            element.dispatchEvent(new FocusEvent('blur'));\n          }\n        }\n        eventDispatched.current.blur = false;\n      },\n      register(element) {\n        ref.current = element;\n      }\n    };\n  }, []);\n}\nfunction useInputValue(options) {\n  var initializeValue = () => {\n    var _options$initialValue;\n    if (typeof options.initialValue === 'string') {\n      // @ts-expect-error FIXME: To ensure that the type of value is also `string | undefined` if initialValue is not an array\n      return options.initialValue;\n    }\n\n    // @ts-expect-error Same as above\n    return (_options$initialValue = options.initialValue) === null || _options$initialValue === void 0 ? void 0 : _options$initialValue.map(value => value !== null && value !== void 0 ? value : '');\n  };\n  var [key, setKey] = useState(options.key);\n  var [value, setValue] = useState(initializeValue);\n  if (key !== options.key) {\n    setValue(initializeValue);\n    setKey(options.key);\n  }\n  return [value, setValue];\n}\nfunction useControl(meta) {\n  var [value, setValue] = useInputValue(meta);\n  var {\n    register,\n    change,\n    focus,\n    blur\n  } = useInputEvent();\n  var handleChange = value => {\n    setValue(value);\n    change(value);\n  };\n  var refCallback = element => {\n    var _meta$key;\n    register(element);\n    if (!element) {\n      return;\n    }\n    var prevKey = element.dataset.conform;\n    var nextKey = \"\".concat((_meta$key = meta.key) !== null && _meta$key !== void 0 ? _meta$key : '');\n    if (prevKey !== nextKey) {\n      element.dataset.conform = nextKey;\n      updateFieldValue(element, value !== null && value !== void 0 ? value : '');\n    }\n  };\n  return {\n    register: refCallback,\n    value,\n    change: handleChange,\n    focus,\n    blur\n  };\n}\nfunction useInputControl(meta) {\n  var [value, setValue] = useInputValue(meta);\n  var initializedRef = useRef(false);\n  var {\n    register,\n    change,\n    focus,\n    blur\n  } = useInputEvent();\n  useEffect(() => {\n    var form = getFormElement(meta.formId);\n    if (!form) {\n      // eslint-disable-next-line no-console\n      console.warn(\"useInputControl is unable to find form#\".concat(meta.formId, \" and identify if a dummy input is required\"));\n      return;\n    }\n    var element = getEventTarget(form, meta.name);\n    if (!element && typeof value !== 'undefined' && (!Array.isArray(value) || value.length > 0)) {\n      element = createDummySelect(form, meta.name, value);\n    }\n    register(element);\n    if (!initializedRef.current) {\n      initializedRef.current = true;\n    } else {\n      change(value !== null && value !== void 0 ? value : '');\n    }\n    return () => {\n      register(null);\n      var elements = getFieldElements(form, meta.name);\n      for (var _element of elements) {\n        if (isDummySelect(_element)) {\n          _element.remove();\n        }\n      }\n    };\n  }, [meta.formId, meta.name, value, change, register]);\n  return {\n    value,\n    change: setValue,\n    focus,\n    blur\n  };\n}\nfunction Control(props) {\n  var control = useControl(props.meta);\n  return props.render(control);\n}\n\nexport { Control, createDummySelect, getEventTarget, getFieldElements, getFormElement, isDummySelect, updateFieldValue, useControl, useInputControl, useInputEvent, useInputValue };\n", "import { objectSpread2 as _objectSpread2 } from './_virtual/_rollupPluginBabelHelpers.mjs';\n\n/**\n * Cleanup `undefined` from the result.\n * To minimize conflicts when merging with user defined props\n */\nfunction simplify(props) {\n  for (var key in props) {\n    if (props[key] === undefined) {\n      delete props[key];\n    }\n  }\n  return props;\n}\n\n/**\n * Derives aria attributes of a form control based on the field metadata.\n */\nfunction getAriaAttributes(metadata) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof options.ariaAttributes !== 'undefined' && !options.ariaAttributes) {\n    return {};\n  }\n  var invalid = options.ariaInvalid === 'allErrors' ? !metadata.valid : typeof metadata.errors !== 'undefined';\n  var ariaDescribedBy = options.ariaDescribedBy;\n  return simplify({\n    'aria-invalid': invalid || undefined,\n    'aria-describedby': invalid ? \"\".concat(metadata.errorId, \" \").concat(ariaDescribedBy !== null && ariaDescribedBy !== void 0 ? ariaDescribedBy : '').trim() : ariaDescribedBy\n  });\n}\n\n/**\n * Derives the properties of a form element based on the form metadata,\n * including `id`, `onSubmit`, `noValidate`, `aria-invalid` and `aria-describedby`.\n *\n * @example\n * ```tsx\n * <form {...getFormProps(metadata)} />\n * ```\n */\nfunction getFormProps(metadata, options) {\n  return simplify(_objectSpread2({\n    id: metadata.id,\n    onSubmit: metadata.onSubmit,\n    noValidate: metadata.noValidate\n  }, getAriaAttributes(metadata, options)));\n}\n\n/**\n * Derives the properties of a fieldset element based on the field metadata,\n * including `id`, `name`, `form`, `aria-invalid` and `aria-describedby`.\n *\n * @example\n * ```tsx\n * <fieldset {...getFieldsetProps(metadata)} />\n * ```\n */\nfunction getFieldsetProps(metadata, options) {\n  return simplify(_objectSpread2({\n    id: metadata.id,\n    name: metadata.name,\n    form: metadata.formId\n  }, getAriaAttributes(metadata, options)));\n}\n\n/**\n * Derives common properties of a form control based on the field metadata,\n * including `key`, `id`, `name`, `form`, `required`, `autoFocus`, `aria-invalid` and `aria-describedby`.\n */\nfunction getFormControlProps(metadata, options) {\n  return simplify(_objectSpread2({\n    key: metadata.key,\n    required: metadata.required || undefined\n  }, getFieldsetProps(metadata, options)));\n}\n\n/**\n * Derives the properties of an input element based on the field metadata,\n * including common form control attributes like `key`, `id`, `name`, `form`, `autoFocus`, `aria-invalid`, `aria-describedby`\n * and constraint attributes such as `type`, `required`, `minLength`, `maxLength`, `min`, `max`, `step`, `pattern`, `multiple`.\n * Depends on the provided options, it will also set `defaultChecked` / `checked` if it is a checkbox or radio button,\n * or otherwise `defaultValue` / `value`.\n *\n * @see https://conform.guide/api/react/getInputProps\n * @example\n * ```tsx\n * // To setup an uncontrolled input\n * <input {...getInputProps(metadata, { type: 'text' })} />\n * // To setup an uncontrolled checkbox\n * <input {...getInputProps(metadata, { type: 'checkbox' })} />\n * // To setup an input without defaultValue\n * <input {...getInputProps(metadata, { value: false })} />\n * // To setup a radio button without defaultChecked state\n * <input {...getInputProps(metadata, { type: 'radio', value: false })} />\n * ```\n */\nfunction getInputProps(metadata, options) {\n  var props = _objectSpread2(_objectSpread2({}, getFormControlProps(metadata, options)), {}, {\n    type: options.type,\n    minLength: metadata.minLength,\n    maxLength: metadata.maxLength,\n    min: metadata.min,\n    max: metadata.max,\n    step: metadata.step,\n    pattern: metadata.pattern,\n    multiple: metadata.multiple\n  });\n  if (typeof options.value === 'undefined' || options.value) {\n    if (options.type === 'checkbox' || options.type === 'radio') {\n      props.value = typeof options.value === 'string' ? options.value : 'on';\n      props.defaultChecked = Array.isArray(metadata.initialValue) ? metadata.initialValue.includes(options.value) : metadata.initialValue === props.value;\n    } else if (typeof metadata.initialValue === 'string') {\n      props.defaultValue = metadata.initialValue;\n    }\n  }\n  return simplify(props);\n}\n\n/**\n * Derives the properties of a select element based on the field metadata,\n * including common form control attributes like `key`, `id`, `name`, `form`, `autoFocus`, `aria-invalid`, `aria-describedby`\n * and constraint attributes such as `required` or `multiple`.\n * Depends on the provided options, it will also set `defaultValue` / `value`.\n *\n * @see https://conform.guide/api/react/getSelectProps\n * @example\n * ```tsx\n * // To setup an uncontrolled select\n * <select {...getSelectProps(metadata)} />\n * // To setup a select without defaultValue\n * <select {...getSelectProps(metadata, { value: false })} />\n * ```\n */\nfunction getSelectProps(metadata) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var props = _objectSpread2(_objectSpread2({}, getFormControlProps(metadata, options)), {}, {\n    multiple: metadata.multiple\n  });\n  if (typeof options.value === 'undefined' || options.value) {\n    var _metadata$initialValu;\n    props.defaultValue = Array.isArray(metadata.initialValue) ? metadata.initialValue.map(item => \"\".concat(item !== null && item !== void 0 ? item : '')) : (_metadata$initialValu = metadata.initialValue) === null || _metadata$initialValu === void 0 ? void 0 : _metadata$initialValu.toString();\n  }\n  return simplify(props);\n}\n\n/**\n * Derives the properties of a textarea element based on the field metadata,\n * including common form control attributes like `key`, `id`, `name`, `form`, `autoFocus`, `aria-invalid`, `aria-describedby`\n * and constraint attributes such as `required`, `minLength` or `maxLength`.\n * Depends on the provided options, it will also set `defaultValue` / `value`.\n *\n * @see https://conform.guide/api/react/getTextareaProps\n * @example\n * ```tsx\n * // To setup an uncontrolled textarea\n * <textarea {...getTextareaProps(metadata)} />\n * // To setup a textarea without defaultValue\n * <textarea {...getTextareaProps(metadata, { value: false })} />\n * ```\n */\nfunction getTextareaProps(metadata) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var props = _objectSpread2(_objectSpread2({}, getFormControlProps(metadata, options)), {}, {\n    minLength: metadata.minLength,\n    maxLength: metadata.maxLength\n  });\n  if (typeof options.value === 'undefined' || options.value) {\n    var _metadata$initialValu2;\n    props.defaultValue = (_metadata$initialValu2 = metadata.initialValue) === null || _metadata$initialValu2 === void 0 ? void 0 : _metadata$initialValu2.toString();\n  }\n  return simplify(props);\n}\n\n/**\n * Derives the properties of a collection of checkboxes or radio buttons based on the field metadata,\n * including common form control attributes like `key`, `id`, `name`, `form`, `autoFocus`, `aria-invalid`, `aria-describedby` and `required`.\n *\n * @see https://conform.guide/api/react/getCollectionProps\n * @example\n * ```tsx\n * <fieldset>\n *   {getCollectionProps(metadata, {\n *     type: 'checkbox',\n *     options: ['a', 'b', 'c']\n *   }).map((props) => (\n *     <div key={props.key}>\n *       <label htmlFor={props.id}>{props.value}</label>\n *       <input {...props} />\n *     </div>\n *  ))}\n * </fieldset>\n * ```\n */\nfunction getCollectionProps(metadata, options) {\n  return options.options.map(value => {\n    var _metadata$key;\n    return simplify(_objectSpread2(_objectSpread2({}, getFormControlProps(metadata, options)), {}, {\n      key: \"\".concat((_metadata$key = metadata.key) !== null && _metadata$key !== void 0 ? _metadata$key : '').concat(value),\n      id: \"\".concat(metadata.id, \"-\").concat(value),\n      type: options.type,\n      value,\n      defaultChecked: typeof options.value === 'undefined' || options.value ? options.type === 'checkbox' && Array.isArray(metadata.initialValue) ? metadata.initialValue.includes(value) : metadata.initialValue === value : undefined,\n      // The required attribute doesn't make sense for checkbox group\n      // As it would require all checkboxes to be checked instead of at least one\n      // It is overriden with `undefiend` so it could be cleaned up properly\n      required: options.type === 'checkbox' ? undefined : metadata.required\n    }));\n  });\n}\n\nexport { getAriaAttributes, getCollectionProps, getFieldsetProps, getFormControlProps, getFormProps, getInputProps, getSelectProps, getTextareaProps };\n"],
  "mappings": "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",
  "names": ["r", "key", "_", "createFormContext", "options", "import_react", "createFormContext", "import_react", "value"]
}
